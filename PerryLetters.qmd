---
title: "PerryLetters"
---

Textual Analysis
Corpi: Benjamin F. Perry Letters and Elizabeth Frances McCall Perry Letters
Collections located at the South Caroliniana Archive
Transcribed by Allen Stokes (retired director of South Caroliniana)

Load Text Anaylsis/Tidy Data libraries
```{r}
install.packages("tidytext")
install.packages("readtext")
install.packages("widyr")
install.packages("SnowballC")
install.packages(stringi)
```

Seems to work better if you install the packages one at a time, rather than how I coded it above. Maybe should just run install.packages() directly on the command line?

```{r}
library("tidyverse")
library("tidytext") 
library("readtext")
library("widyr")
library("SnowballC")
library(stringi)
```

Load BFPerryTranscribedLetters txt document and use readtext to create the dataframe:

```{r}
BFPLetters_file_path <- "/Users/crboatwright/PerryLetters/BFPerryTranscribedLetters.txt"
BFPLetters_text_data <- readtext(BFPLetters_file_path)
head(BFPLetters_text_data)
```

Tokenize the text by word:

```{r}
#This also makes the text lowercase and removed punctuation
tidy_BFPLetters <- BFPLetters_text_data %>%
    unnest_tokens(word, text)

tidy_BFPLetters
```

Tokenize by sentence:

```{r}
tidy_BFPLetters_sentences <- BFPLetters_text_data %>%
    unnest_tokens(sentence, text, token = "sentences")

tidy_BFPLetters_sentences
```

Error above. Probably because dataframe isn't property formatted.

Format text for Document Term Matrix (DTM):

```{r}
install.packages("tm")
```

```{r}
#Create custom stopword list
custom_stopwords <- tibble(word = c("perry", "greenville", "letter", "col", "dear", "night", "morning", "evening", "day", "time", "b.f."), lexicon = "custom")

#Combines custom and standard stopword lists
all_stopwords <- bind_rows(stop_words, custom_stopwords)

#Removes stopword list
tidy_BFPLetters_clean <- tidy_BFPLetters %>%
    anti_join(all_stopwords, by = "word")
```

```{r}
# Add a filename column to tidy_BFPLetters
tidy_BFPLetters_clean <- tidy_BFPLetters_clean %>%
    mutate(filename = "BFPerryTranscribedLetters.txt")

# Now create the Document Term Matrix (DTM)
tidy_BFPLetters_words <- tidy_BFPLetters_clean %>%
    count(filename, word)

head(tidy_BFPLetters_words)

BFPLetters_dtm <- tidy_BFPLetters_words %>%
    cast_dtm(filename, word, n)
```


Train model: 

```{r}
#Load topicmodels package required for LDA function
install.packages("topicmodels")
```
```{r}
library(topicmodels)
BFP.lda <- LDA(BFPLetters_dtm, k = 10, control = list(seed = 12345))
BFP.lda
```

Create a bar chart indicating the topics:

```{r}
BFPLetters_topics <- tidy(BFP.lda, matrix = "beta")
head(BFPLetters_topics)
```

Visualize:

```{r}
BFPLetters_top_terms <- BFPLetters_topics %>%
    arrange(desc(beta)) %>%
    group_by(topic) %>% slice(1:5)

BFPLetters_top_terms %>%
    mutate(term = reorder_within(term, beta, topic)) %>%
    ggplot(aes(beta, term, fill = factor(topic))) +
    geom_col(show.legend = FALSE) +
    facet_wrap(~ topic, scales = "free") +
    scale_y_reordered()
```